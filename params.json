{
  "name": "Angular User Role",
  "tagline": "Simple role based access control for Angular application (Inspired by Grails + Spring Security Core plugin)",
  "body": "# Angular User Role\r\n\r\nInspired by Grails [Spring Security Core](http://grails.org/plugin/spring-security-core) plugin concept of roles and [TagLib](http://grails-plugins.github.io/grails-spring-security-core/v2/guide/helperClasses.html#securityTagLib).\r\n\r\nThis library provides a simple vanilla access control for your Angular application. By definition role is named set of\r\nabilities (permissions) by which specific group of users is identified. Role names can be like `ROLE_ADMIN`,\r\n`ROLE_ORGANIZATION_MANAGER` or `roleAccountant`.\r\n\r\n## Usage\r\n\r\n### 1. Install via Bower\r\n\r\n    bower install angular-user-role --save\r\n\r\n### 2. Add the script to your main HTML file (like `index.html`)\r\n\r\n    <script src=\"bower_components/angular-user-role/dist/angular-user-role.min.js\"></script>\r\n\r\n### 3. Add dependency to your application\r\n\r\n    var myApp = angular.module(\"foo\", [\"angular.user.role\", \"others\"]);\r\n\r\n### 4. In your application, when a user logs in or logs out, do the following:\r\n\r\n```\r\nmyApp.controller(\"LoginController\", [\"$scope\", \"$http\", \"securityService\", function($scope, $http, securityService) {\r\n\r\n    $scope.doLogin = function() {\r\n        $http.post('/api/login', {username: \"foo\", password: \"bar\"}).then(function(resp) {\r\n            // Successfully logged in\r\n\r\n            // Notify the security service that current logged in user following roles where roles should be an array\r\n             of string like: [\"ROLE_ADMIN\", \"ROLE_ORGANIZATION_MANAGER\"]\r\n            securityService.loggedIn(resp.data.roles);\r\n        });\r\n    };\r\n\r\n    $scope.logout = function() {\r\n        $http.post('/api/logout').then(function() {\r\n            // Successfully logged out\r\n\r\n            // Notify the security service that user has logged out\r\n            securityService.loggedOut();\r\n        });\r\n    };\r\n}]);\r\n```\r\n\r\n### 5. Now use it in your HTML\r\n\r\n#### if-logged-in\r\n\r\nDisplays the inner body content (element type) or the whole element (attribute type) if the user is authenticated or\r\nlogged in.\r\n\r\n```\r\n<if-logged-in>This content will be visible when user is logged in</if-logged-in>\r\n\r\n<div if-logged-in>This content will also be visible when user is logged in</div>\r\n\r\n<div if-logged-in ng-if=\"someOtherCondition\">\r\n    This content will be visible when user is logged in and \"someOtherCondition\" is true\r\n</div>\r\n```\r\n\r\n#### if-not-logged-in\r\n\r\nDisplays the inner body content (element type) or the whole element (attribute type) if the user is not authenticated or\r\nnot logged in.\r\n\r\n```\r\n<if-not-logged-in>This content will be visible when user is not logged in</if-not-logged-in>\r\n\r\n<div if-not-logged-in>This content will also be visible when user is not logged in</div>\r\n\r\n<div if-not-logged-in ng-if=\"someOtherCondition\">\r\n    This content will only be visible when the user is not logged in and \"someOtherCondition\" is true\r\n</div>\r\n```\r\n\r\n#### if-any-granted\r\n\r\nDisplays the element if at least one of the listed roles are granted to the current logged in user.\r\n\r\n```\r\n<div class=\"thumbnail\" if-any-granted=\"ROLE_ADMIN,ROLE_USER\">\r\n    <-- Your content here -->\r\n</div>\r\n```\r\n\r\nor\r\n\r\n```\r\n<if-any-granted roles=\"ROLE_ADMIN,ROLE_USER\">\r\n    <div class=\"thumbnail\">Hello</div>\r\n</if-any-granted>\r\n```\r\n\r\n*If the user is not logged in then the content or element will be hidden/removed.*\r\n\r\n\r\n\r\n#### if-all-granted\r\n\r\nDisplays the element if all the listed roles are granted to the current logged in user.\r\n\r\n```\r\n<div class=\"thumbnail\" if-all-granted=\"ROLE_ADMIN,ROLE_USER\">\r\n    <-- Your content here -->\r\n</div>\r\n```\r\n\r\nor\r\n\r\n```\r\n<if-all-granted roles=\"ROLE_ADMIN,ROLE_USER\">\r\n    <div class=\"thumbnail\">Hello</div>\r\n</if-all-granted>\r\n```\r\n\r\n*If the user is not logged in then the content or element will be hidden/removed.*\r\n\r\n===================\r\n**_Note_**: In the above all directives, the behaviour of `ng-if` directive is used i.e. if any of the role based\r\nauthentication results in `false` then the respective DOM element will be removed from the DOM.\r\n\r\n## Testing\r\n\r\nConsider there are 4 roles available in the system: `ROLE_ADMIN, ROLE_USER, ROLE_ORGANIZATION_MANAGER, ROLE_ACCOUNTANT`\r\nand the currently logged in user has only `ROLE_USER` & `ROLE_ACCOUNTANT` then the following should be true (Run when\r\nuser is logged in and logged out):\r\n\r\n```\r\n<if-logged-in>I should only be visible when the user is logged in.<br></if-logged-in>\r\n<div if-logged-in>I should only be visible when the user is logged in.<br></div>\r\n<div if-logged-in ng-if=\"false\">I should not be visible in any case.</div>\r\n<div if-logged-in ng-if=\"true\">I should only be visible when the user is logged in.</div>\r\n\r\n<if-not-logged-in>I should only be visible when the user is not logged in.<br></if-not-logged-in>\r\n<div if-not-logged-in>I should only be visible when the user is not logged in.<br></div>\r\n<div if-not-logged-in ng-if=\"false\">I should not be visible in any case<br></div>\r\n\r\n<if-any-granted roles=\"ROLE_ADMIN, ROLE_USER\" ng-if=\"true\">\r\n    I should be visible when user is logged in.<br>\r\n</if-any-granted>\r\n\r\n<div if-any-granted=\"ROLE_USER,ROLE_ADMIN\" ng-if=\"true\">\r\n    I should be visible when user is logged in.<br>\r\n</div>\r\n\r\n<if-any-granted roles=\"ROLE_ADMIN, ROLE_USER\">\r\n    I should be visible when user is logged in.<br>\r\n</if-any-granted>\r\n\r\n<if-any-granted roles=\"ROLE_ADMIN,ROLE_ORGANIZATION_MANAGER\">\r\n    I should not be visible when user is logged in or not logged in.<br>\r\n</if-any-granted>\r\n\r\n<if-any-granted roles=\"ROLE_ADMIN, ROLE_USER, ROLE_ACCOUNTANT\" ng-if=\"false\">\r\n    I should not be visible in any case.<br>\r\n</if-any-granted>\r\n\r\n<div if-any-granted=\"ROLE_USER\" ng-if=\"false\">\r\n    I should not be visible in any case.<br>\r\n</div>\r\n\r\n<if-all-granted roles=\"ROLE_ADMIN, ROLE_USER\" ng-if=\"true\">\r\n    I should not be visible in any case.<br>\r\n</if-all-granted>\r\n\r\n<if-all-granted roles=\"ROLE_ADMIN, ROLE_USER\">I should not be visible in any case.</if-all-granted>\r\n<if-all-granted roles=\"ROLE_ADMIN, ROLE_USER\" ng-if=\"false\">I should not be visible.</if-all-granted>\r\n\r\n<div if-all-granted roles=\"ROLE_ADMIN, ROLE_USER\" ng-if=\"false\">I should not be visible.</div>\r\n<div if-all-granted roles=\"ROLE_ADMIN, ROLE_USER\" ng-if=\"true\">I should not be visible.</div>\r\n\r\n<if-all-granted roles=\"ROLE_USER\" ng-if=\"true\">\r\n    I should be visible only when the user is logged in.<br>\r\n</if-all-granted>\r\n\r\n<div if-all-granted=\"ROLE_USER,ROLE_ACCOUNTANT\" ng-if=\"true\">\r\n    I should be visible only when the user is logged in.<br>\r\n</div>\r\n\r\n<div if-all-granted=\"ROLE_USER\" ng-if=\"false\">\r\n    I should not be visible in any case.<br>\r\n</div>\r\n```\r\n\r\n## Development & Contributions\r\n\r\nPull requests are welcome :-)\r\n\r\n## Releasing new version\r\n\r\n```\r\ngrunt uglify\r\ngrunt bump:patch\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}